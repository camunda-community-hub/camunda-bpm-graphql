<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- Attention: to properly separate dependencies of extension and examples, do not define any dependencies/management here! -->
  <parent>
    <groupId>org.camunda.community</groupId>
    <artifactId>community-hub-release-parent</artifactId>
    <version>1.2.2</version>
  </parent>

  <groupId>org.camunda.platform7.extension</groupId>
  <artifactId>camunda-platform-7-graphql-root</artifactId>
  <version>0.5.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <version.java>1.8</version.java>
    <encoding>UTF-8</encoding>
    <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
    <project.build.resourceEncoding>${encoding}</project.build.resourceEncoding>

    <!-- versions -->
    <version.camunda>7.12.0</version.camunda>
    <version.camundaSpringBoot>3.4.0</version.camundaSpringBoot>
    <version.springBoot>2.2.1.RELEASE</version.springBoot>
    <version.spin>1.8.0</version.spin>

    <!-- disable javadoc linter for JDK8 to not fail on incomplete javadoc -->
    <additionalparam>-Xdoclint:none</additionalparam>
    
    <!-- release parent settings -->
    <nexus.snapshot.repository>https://artifacts.camunda.com/artifactory/camunda-bpm-community-extensions-snapshots/</nexus.snapshot.repository>
    <nexus.release.repository>https://artifacts.camunda.com/artifactory/camunda-bpm-community-extensions/</nexus.release.repository>    
  </properties>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:camunda/camunda-bpm-graphql.git</connection>
    <url>scm:git:git@github.com:camunda/camunda-bpm-graphql.git</url>
    <developerConnection>scm:git:git@github.com:camunda/camunda-bpm-graphql.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <modules>
    <module>extension</module>
    <module>extension-webapp</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-bom</artifactId>
        <version>${version.camunda}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.camunda.spin</groupId>
        <artifactId>camunda-spin-bom</artifactId>
        <scope>import</scope>
        <type>pom</type>
        <version>${version.spin}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${version.springBoot}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- modules -->
      <dependency>
        <groupId>org.camunda.platform7.extension</groupId>
        <artifactId>camunda-platform-7-graphql</artifactId>
        <version>${project.version}</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <profiles>
    <profile>
      <id>include-examples</id>
      <modules>
        <module>example</module>
      </modules>
    </profile>
    <profile>
      <id>community-action-maven-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
                <execution>
                    <id>sign-artifacts</id>
                    <phase>verify</phase>
                    <goals>
                        <goal>sign</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <!-- Prevent gpg from using pinentry programs -->
                <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                </gpgArguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
